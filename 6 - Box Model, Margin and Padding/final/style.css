* {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
  color: black;
}

a:hover {
  color: red;
}

a:active {
  color: green;
}

a:visited {
  color: black;
}

.categories li {
  padding-bottom: 6px;
  border-bottom: dotted 1px #333;
}

/* They have different pseudo-classes, such as hover */
/* When you hover over an element, the state will be triggered. */
/* Active means that when you click on it, it flahses. */
/* Visited gets triggered when their url has been visited. */

.container {
  width: 20em;
  height: 10em;
  margin: auto;
  border: 2px;
  border-color: black;
  border-style: solid;
  padding: 0 1em;

  border-width: 3px;
  border-bottom-width: 10px;
  border-top-style: dotted;

  padding-top: 20px;
  padding-bottom: 20px;
  padding-right: 20px;
  padding-left: 20px;

  /* Same as above */
  padding: 20px;

  /* Adds space above it. */
  margin-top: 20px;

  position: relative;
}

.container span {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 800;
  font-style: italic;
  text-decoration: underline;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  word-spacing: 0.5em;
  position: absolute;
  bottom: 0;
  padding: 1em;
}

.container-2 {
  border: 3px dotted lightgray;
  padding: 20px;
  margin: 5em 10em;
}

.categories {
  border: 1px #ccc solid;
  padding: 10px;
  margin: 0 10em;
  border-radius: 15px;
}

.categories h2 {
  text-align: center;
}

.categories ul {
  list-style: square;
}

/* Border also has a shorthand, 
border: 2px black solid; */

/* You can zero out every margin and padding of the page, by performing a CSS reset.
That gives you more certainty that the web application you are building will look how you want it to look like, without defaults of the browser. */
